{"version":3,"sources":["services/populations.js","services/emissions.js","services/countries.js","components/Notification.js","components/Header.js","components/Search.js","components/Result.js","components/ResultOptions.js","App.js","index.js"],"names":["fetchData","_ref","Object","asyncToGenerator","regenerator_default","a","mark","_callee","url","response","wrap","_context","prev","next","axios","get","sent","abrupt","format","data","stop","this","_x","apply","arguments","map","x","year","date","value","reverse","services_populations","getByISO","ISO","concat","services_emissions","formated","iso2Code","label","name","sort","b","services_countries","Notification","notification","react_default","createElement","className","messageClass","message","Header","title","subtitle","Search","countries","setSelected","selected","undefined","react_select_esm","onChange","options","theme","objectSpread","colors","primary25","primary","Result","populations","emissions","perCapita","rangeValue","filteredPopulations","filter","population","min","max","filteredEmissions","emission","weightUnit","chartData","labels","datasets","fill","backgroundColor","borderColor","pointBorderColor","pointBackgroundColor","pointRadius","pointHitRadius","i","legend","display","tooltips","displayColors","scales","yAxes","scaleLabel","labelString","xAxes","responsive","maintainAspectRatio","es","ResultOptions","togglePerCapita","setRange","rangeLimits","react_switch_default","checked","js_default","maxValue","minValue","App","props","_this","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","handleSelectedChange","populationService","emissionsService","setState","console","log","state","notify","handleRangeChange","handlePerCapitaChange","setTimeout","countriesService","Number","length","components_Notification","components_Header","components_Search","components_ResultOptions","components_Result","Component","ReactDOM","render","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.1bd4f34a.chunk.js","sourcesContent":["import axios from 'axios'\n\nconst getByISO = (ISO) => {\n    const url = `https://api.worldbank.org/v2/countries/${ISO}/indicators/SP.POP.TOTL?per_page=100&format=json`\n    return fetchData(url)\n}\n\nconst fetchData = async (url) => {\n    const response = await axios.get(url)\n    return format(response.data)\n}\n\nconst format = (data) => {\n    if (data[1] === null) return null\n    const formated = data[1].map(x => {\n        return ({\n            \"year\": x.date,\n            \"value\": x.value\n        })\n    })\n\n    return formated.reverse()\n}\n\nexport default { getByISO }","import axios from 'axios'\n\nconst getByISO = (ISO) => {\n    const url = `https://api.worldbank.org/v2/countries/${ISO}/indicators/EN.ATM.CO2E.KT?per_page=100&format=json`\n    return fetchData(url)\n}\n\nconst fetchData = async (url) => {\n    const response = await axios.get(url)\n    return format(response.data)\n}\n\nconst format = (data) => {\n    if (data[1] === null) return null\n    const formated = data[1].map(x => {\n        return ({\n            \"year\": x.date,\n            \"value\": x.value\n        })\n    })\n\n    return formated.reverse()\n}\n\nexport default { getByISO }","import axios from 'axios'\n\nconst getAll = () => {\n    const url = 'https://api.worldbank.org/v2/country?per_page=500&format=json'\n    return fetchData(url)\n}\n\nconst fetchData = async (url) => {\n    const response = await axios.get(url)\n    return format(response.data)\n}\n\nconst format = (data) => {\n    const formated = data[1].map(x => {\n        return ({\n            \"value\": x.iso2Code,\n            \"label\": x.name\n        })\n    })\n\n    formated.sort((a, b) => (a.label > b.label) ? 1 : -1)\n    return formated\n}\n\nexport default { getAll }","import React from 'react'\nimport '../styles/notification.css'\n\nconst Notification = ({ notification }) => {\n    if (notification === null) {\n        return null\n    }\n    return (\n        <div className={'notification ' + notification.messageClass}>\n            {notification.message}\n        </div>\n    )\n}\n\nexport default Notification","import React from 'react'\nimport '../styles/header.css'\n\nconst Header = ({title, subtitle}) => {\n    return (\n        <div className='header'>\n            <div className='title'>\n                {title}\n            </div>\n            <div className='subtitle'>\n                {subtitle}\n            </div>\n        </div>\n    )\n}\n\nexport default Header","import React from 'react'\nimport Select from 'react-select'\n\nimport '../styles/search.css'\n\nconst Search = ({ countries, setSelected, selected }) => {\n    if (countries === undefined) return null\n\n    return (\n        <div className='search'>\n            <Select\n                value={selected}\n                onChange={setSelected}\n                options={countries}\n                theme={(theme) => ({\n                    ...theme,\n                    colors: {\n                        ...theme.colors,\n                        primary25: '#eeeeee',\n                        primary: '#555555',\n                    },\n                })} />\n        </div>\n    )\n}\n\nexport default Search","import React from 'react'\nimport { Line } from 'react-chartjs-2'\n\nimport '../styles/result.css'\n\nconst Result = ({ populations, emissions, selected, perCapita, rangeValue }) => {\n    if (populations === null || emissions === null || selected === null || rangeValue === null) {\n        return (\n            <div>\n                No data could be found for {selected.label}\n            </div>\n        )\n    } else {\n        const filteredPopulations = populations.filter(population => rangeValue.min <= population.year && rangeValue.max >= population.year)\n        const filteredEmissions = emissions.filter(emission => rangeValue.min <= emission.year && rangeValue.max >= emission.year)\n\n        const labels = filteredEmissions.map(emission => emission.year)\n        const data = perCapita ?\n            filteredEmissions.map((emission, i) => emission.value ? (emission.value / filteredPopulations[i].value) * 1000000 : null)\n            :\n            filteredEmissions.map(emission => emission.value)\n\n        const weightUnit = perCapita ? 'kg' : 'kt'\n\n        const chartData = {\n            labels: labels,\n            datasets: [{\n                label: weightUnit,\n                fill: false,\n                backgroundColor: 'rgba(219, 43, 0, 0.5)',\n                borderColor: 'rgba(219, 43, 0, 1)',\n                pointBorderColor: 'rgba(219, 43, 0, 1)',\n                pointBackgroundColor: 'rgb(255, 255, 255)',\n                pointRadius: 1,\n                pointHitRadius: 6,\n                data: data,\n            }]\n        }\n\n        const options = {\n            legend: {\n                display: false\n            },\n            tooltips: {\n                displayColors: false\n            },\n            scales: {\n                yAxes: [{\n                    scaleLabel: {\n                        display: true,\n                        labelString: 'Emissions (' + weightUnit + ')'\n                    }\n                }],\n                xAxes: [{\n                    scaleLabel: {\n                        display: true,\n                        labelString: 'Year'\n                    }\n                }]\n            },\n            responsive: true,\n            maintainAspectRatio: false\n        }\n\n        return (\n            <div className='chartContainer'>\n                <Line data={chartData} options={options} />\n            </div>\n        )\n    }\n}\n\nexport default Result","import React from 'react'\nimport InputRange from 'react-input-range'\nimport Switch from 'react-switch'\n\nimport '../styles/resultOptions.css'\n\nconst ResultOptions = ({ perCapita, togglePerCapita, rangeValue, setRange, rangeLimits }) => {\n\n    if (togglePerCapita === null || rangeValue === null || rangeLimits === null) {\n        return null\n    }\n\n    return (\n        <div className='resultOptions'>\n            <div className='perCapita'>\n                <Switch onChange={togglePerCapita} checked={perCapita} />\n                <label>Per Capita</label>\n            </div>\n\n            <InputRange\n                maxValue={rangeLimits.max}\n                minValue={rangeLimits.min}\n                value={rangeValue}\n                onChange={value => setRange(value)} />\n        </div>\n    )\n}\n\nexport default ResultOptions","import React, { Component } from 'react'\n\nimport populationService from './services/populations'\nimport emissionsService from './services/emissions'\nimport countriesService from './services/countries'\n\nimport Notification from './components/Notification'\nimport Header from './components/Header'\nimport Search from './components/Search'\nimport Result from './components/Result'\nimport ResultOptions from './components/ResultOptions'\n\nimport './styles/styles.css'\n\nclass App extends Component {\n\n    constructor(props) {\n        super(props)\n        this.state = {\n            countries: [],\n            selected: {\n                value: '1W',\n                label: 'World'\n            },\n            rangeValue: null,\n            rangeLimits: null,\n            populations: null,\n            emissions: null,\n            perCapita: false,\n            notification: null\n        }\n    }\n\n    async componentDidMount() {\n        const countries = await countriesService.getAll()\n        const populations = await populationService.getByISO(this.state.selected.value)\n        const emissions = await emissionsService.getByISO(this.state.selected.value)\n        const rangeValue = {\n            min: Number(emissions[0].year),\n            max: Number(emissions[emissions.length - 1].year)\n        }\n        const rangeLimits = rangeValue\n        this.setState({ countries, populations, emissions, rangeValue, rangeLimits })\n        console.log(this.state)\n    }\n\n    handleSelectedChange = async (selected) => {\n        const populations = await populationService.getByISO(selected.value)\n        const emissions = await emissionsService.getByISO(selected.value)\n\n        if (populations !== null && emissions !== null) {\n            this.setState({\n                selected,\n                populations,\n                emissions\n            })\n            console.log(this.state)\n        } else {\n            this.notify('No data was found for ' + selected.label, 'danger')\n        }\n    }\n\n    handleRangeChange = (value) => {\n        this.setState({\n            rangeValue: value\n        })\n    }\n\n    handlePerCapitaChange = (checked) => {\n        this.setState({\n            perCapita: checked\n        })\n    }\n\n    notify = (message, messageClass) => {\n        this.setState({\n            notification: {\n                message,\n                messageClass\n            }\n        })\n        setTimeout(() => {\n            this.setState({\n                notification: null\n            })\n        }, 3000)\n    }\n\n    render() {\n\n        return (\n            <div className='container'>\n                <Notification notification={this.state.notification} />\n                <Header title={'CO2 Emissions'} subtitle={'Search by area and compare by capita'} />\n                <Search countries={this.state.countries} setSelected={this.handleSelectedChange} selected={this.state.selected} />\n                <ResultOptions perCapita={this.state.perCapita} togglePerCapita={this.handlePerCapitaChange} rangeValue={this.state.rangeValue} setRange={this.handleRangeChange} rangeLimits={this.state.rangeLimits} />\n                <Result populations={this.state.populations} emissions={this.state.emissions} selected={this.state.selected} perCapita={this.state.perCapita} rangeValue={this.state.rangeValue} />\n            </div>\n        )\n    }\n}\n\nexport default App\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\n\nReactDOM.render(<App />, document.getElementById('root'))"],"sourceRoot":""}